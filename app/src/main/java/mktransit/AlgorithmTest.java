package mktransit;

import java.util.Map;

public class AlgorithmTest {
    public static void main(String[] args) {
        JsonReader reader = new JsonReader();
        reader.loadJsonData();

        Map<String, Station> stationMap = reader.getStationMap();

        PathFinder pathFinder = new PathFinder(stationMap);

        // ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà "‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô interchange"
        String startId = "N6";
        String endId = "E4";

        PathResult result = pathFinder.findShortestPath(startId, endId);

        if (result.getFullPath().isEmpty()) {
            System.out.println("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å " + startId + " ‡πÑ‡∏õ‡∏¢‡∏±‡∏á " + endId);
        } else {
            System.out.println("‚úÖ ‡πÄ‡∏à‡∏≠‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á!");
            System.out.println("‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:");

            for (String stationId : result.getFullPath()) {
                Station station = stationMap.get(stationId);
                System.out.println("- " + station.getName() + " (" + station.getId() + ")");
            }

            System.out.println("\nüìç ‡∏à‡∏∏‡∏î‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç (Important Steps):");
            for (String stationId : result.getImportantSteps()) {
                Station station = stationMap.get(stationId);
                System.out.println("* " + station.getName() + " (" + station.getId() + ")");
            }

            System.out.println("\nüïí ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: " + result.getTotalTime() + " ‡∏ô‡∏≤‡∏ó‡∏µ");
        }
    }
}
